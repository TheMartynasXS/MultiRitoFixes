name: Package Application with PyInstaller
on:
  push:
    branches:
      - main
permissions:
  contents: write
jobs:
  build:
    runs-on: windows-latest
    steps:

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r src/requirements.txt

      - name: Read version from version.txt
        id: get_version
        run: |
          echo "VERSION=$(cat src/version.txt)" >> $GITHUB_ENV

      - name: Package Application with PyInstaller
        run: |
          pyinstaller --noconfirm src/MultiRitoFixes.spec
        env:
          VERSION: ${{ env.VERSION }}

      - name: Find built executable
        id: find_exe
        run: |
          echo "EXE_NAME=MultiRitoFixes-v${{ env.VERSION }}.exe" >> $GITHUB_ENV
          echo "EXE_PATH=dist/MultiRitoFixes-v${{ env.VERSION }}.exe" >> $GITHUB_ENV

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: MultiRitoFixes-v${{ env.VERSION }}.exe
          path: dist/MultiRitoFixes-v${{ env.VERSION }}.exe
          if-no-files-found: warn
          compression-level: 6
          overwrite: false
          include-hidden-files: false

      - name: Create tag for release
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git fetch --tags
          if git rev-parse ${{ env.VERSION }} >/dev/null 2>&1; then
            git tag -d ${{ env.VERSION }}
            git push --delete origin ${{ env.VERSION }}
          fi
          git tag ${{ env.VERSION }}
          git push origin ${{ env.VERSION }}

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.VERSION }}
          name: Release ${{ env.VERSION }}
          files: dist/MultiRitoFixes-v${{ env.VERSION }}.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}